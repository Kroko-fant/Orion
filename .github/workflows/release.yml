# Releases the plugin to GitHub and JetBrains
name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to release
        required: true
jobs:
  build-upload:
    name: Build and Upload Plugin
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - name: Build Plugin
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          arguments: buildPlugin -Pversion=${{ github.event.inputs.version }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Orion ${{ github.event.inputs.version }}
          draft: true
          prerelease: false
      - name: Upload GitHub Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/orion-${{ github.event.inputs.version }}.zip
          asset_name: orion-${{ github.event.inputs.version }}.zip
          asset_content_type: application/zip
  jb-publish:
    name: Upload Plugin to JetBrains
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - name: Inject Mail
        run: sed -i -e 's/<your_mail>/alexander.ungar@tum.de/g' build.gradle.kts
      - name: Inject Token
        run: sed -i -e 's/<your_token>/${{ secrets.PLUGIN_REPOSITORY_TOKEN }}/g' build.gradle.kts
      - name: Publish Plugin
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          arguments: publishPlugin -Pversion=${{ github.event.inputs.version }}
